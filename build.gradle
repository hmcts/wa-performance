plugins {
  id 'org.owasp.dependencycheck' version '12.1.3'
  id 'scala'
  id 'java-library'
  id 'io.gatling.gradle' version '3.14.3'
}
 
java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}
 
tasks.withType(JavaExec) {
  // Configure the size of the JVM if necessary
  jvmArgs = ['-Xms1024m', '-Xmx2048m']
  /* Use the following args to build a report when a test was terminated
  args = [
      "--reports-only", "fact-20201109092032896",
      '--results-folder', file('build/reports/gatling').absolutePath,
      ]
  */
}
 
tasks.withType(Copy).all{
  duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
 
repositories {
  mavenCentral()
}

dependencies {
  gatlingImplementation project(':common-performance')
}

dependencyCheck {
  suppressionFile = "common/common-performance/owasp/owasp-suppressions.xml"
  analyzers.assemblyEnabled = false
}

tasks.register("runSimulation", JavaExec) {
  group = "Gatling Test"
  description = "Runs a specified Gatling simulation without interactive mode"

  classpath = sourceSets.gatling.runtimeClasspath
  mainClass.set("io.gatling.app.Gatling")

  // Add simulation class and results directory
  args += [
          "-s", "simulations.UISimulation", // Main simulation used for WA testing
//          "-s", "simulations.APISimulation", //Only used for specific API testing scenarios
          "-rf", layout.buildDirectory.get().asFile.toString() + "/reports/gatling"
  ]

  // JVM args required for Java 21
  jvmArgs += ["--add-opens=java.base/java.lang=ALL-UNNAMED"]

  // Pass through all -D properties from command line
  jvmArgs += System.properties.findAll { key, _ ->
    key instanceof String && key.startsWith("-D") == false && key != "java.class.path"
  }.collect { key, value ->
    "-D${key}=${value}"
  }
}


// Override gatlingRun task
tasks.named("gatlingRun") {
  dependsOn("runSimulation")
  enabled = false
}
 
gatling {
  gatlingVersion '3.14.3'
  scalaVersion '2.13.11'
}
 
sourceSets {
  gatling {
    scala {
      srcDir 'src/gatling/simulations'
    }
    resources {
      srcDir 'src/gatling/resources'
    }
  }
}